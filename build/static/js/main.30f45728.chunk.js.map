{"version":3,"sources":["components/Landing/Banner/Banner.js","components/Landing/Landing.js","state/toasts/index.js","state/hooks.js","utils/getRpcUrl.js","utils/web3React.js","utils/wallet.js","hooks/useAuth.js","components/Landing/header/Navbar.js","components/ChooseCurrency/Choose.js","utils/web3.js","hooks/useWeb3.js","utils/Environment.js","utils/contractHelpers.js","hooks/distributeMultiple.js","components/Progress/Progress.js","hooks/useEagerConnect.js","App.js","reportWebVitals.js","redux/Reducers/Index.js","redux/store/rootReducer.js","redux/store/index.js","index.js"],"names":["Banner","className","to","Landing","toastsSlice","createSlice","name","initialState","data","reducers","push","state","action","payload","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","actions","toastTypes","nodes","process","getNodeUrl","randomIndex","random","length","ConnectorNames","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","setupNetwork","provider","window","ethereum","request","method","params","toString","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","console","error","useAuth","useWeb3React","activate","deactivate","toastError","dispatch","useDispatch","useMemo","pushToast","title","description","kebabCase","type","toastInfo","toastSuccess","toastWarning","removeToast","clearToast","useToast","login","useCallback","connectorID","connector","UnsupportedChainIdError","walletConnectProvider","undefined","message","logout","Navbar","account","connectMetaMask","log","localStorage","setItem","class","href","src","alt","onClick","Choose","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","useWeb3","library","refEth","useRef","useState","web3","setweb3","useEffect","current","Environment","YfethContractAddress","MorocoContractcAddress","evangelismAddress","getContract","abi","address","eth","Contract","DistributeMultiple","contract","tokenAbi","tokenContract","environment","DisperseMulti","tokenaddy","walletArr","userPrices","elem","utils","toWei","JSON","stringify","methods","distributeMultiple","send","from","on","tx","transactionHash","catch","nfts","Progress","amount","setamount","makepayment","valarr","newarr","datas","scope","tabindex","style","color","onChange","e","target","value","useEagerConnect","connectorId","getItem","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","combineReducers","UserReducer","balance","reward","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getLibrary","document","getElementById"],"mappings":"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","file":"static/js/main.30f45728.chunk.js","sourcesContent":["import React from 'react';\nimport \"./banner.scss\";\nimport { Link } from 'react-router-dom'\n\nconst Banner = () => {\n  return (\n    <>\n    <section className=\"banner\">\n      <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis.</p>\n      <h2>Connect Wallet</h2>\n      <Link to=\"/choose\">\n      <button className='btn-yellow'>Connect Wallet</button>\n      </Link>\n    </section>\n    </>\n  )\n}\n\nexport default Banner;","\nimport React from 'react';\nimport '../../app.scss';\nimport Banner from \"../../components/Landing/Banner/Banner\";\n\nfunction Landing() {\n  return (\n    <>\n       <Banner />\n    </>\n  );\n}\n\nexport default Landing;","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state, action) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state, action) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","import { useMemo } from 'react'\nimport { kebabCase } from 'lodash'\n// import { Toast, toastTypes } from '@babefinance/uikit'\nimport { useDispatch } from 'react-redux'\nimport {\n    push as pushToast,\n    remove as removeToast,\n    clear as clearToast,\n} from './actions'\n\nconst toastTypes = {\n    SUCCESS: \"string\",\n    DANGER: \"string\",\n    WARNING: \"string\",\n    INFO: \"string\",\n};\n\n\nexport const useToast = () => {\n    const dispatch = useDispatch()\n    const helpers = useMemo(() => {\n        const push = (toast) => dispatch(pushToast(toast))\n\n        return {\n            toastError: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n            },\n            toastInfo: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n            },\n            toastSuccess: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n            },\n            toastWarning: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n            },\n            push,\n            remove: (id) => dispatch(removeToast(id)),\n            clear: () => dispatch(clearToast()),\n        }\n    }, [dispatch])\n\n    return helpers\n}","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport getNodeUrl from './getRpcUrl'\n\nconst ConnectorNames = {\n    Injected: \"injected\",\n    WalletConnect: \"walletconnect\",\n    BSC: \"bsc\"\n}\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n    rpc: { [chainId]: rpcUrl },\n    bridge: 'https://bridge.walletconnect.org',\n    qrcode: true,\n    pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName = {\n    [ConnectorNames.Injected]: injected,\n    [ConnectorNames.WalletConnect]: walletconnect,\n    [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider) => {\n    return provider\n}\n\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window).ethereum\n  if (provider) {\n    // const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    const chainId = 97;\n        try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain TestNet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n         //    blockExplorerUrls: ['https://bscscan.com/'],\n            blockExplorerUrls: ['https://testnet.bscscan.com/'],\n\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress,\n  tokenSymbol,\n  tokenDecimals,\n  tokenImage,\n) => {\n  const tokenAdded = await (window).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { useToast } from '../state/hooks'\nimport { connectorsByName } from '../utils/web3React'\nimport { setupNetwork } from '../utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  \n  const login = useCallback((connectorID) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n      activate(connector, async (error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          connector.walletConnectProvider = undefined\n          toastError(error.name, error.message)\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","import React from \"react\";\nimport { useWeb3React } from '@web3-react/core'\nimport useAuth from '../../../hooks/useAuth';\nimport \"./navbar.scss\";\n\nconst Navbar = () => {\n  const { account } = useWeb3React();\n  const { login, logout } = useAuth();\n  const connectMetaMask = () => {\n    console.log(\"here\", account)\n    localStorage.setItem(\"connectorId\", \"injected\")\n    if (account) {\n        logout()\n    } else {\n        login(\"injected\")\n    }\n}\n  return (\n    <>\n     <section className=\"main-navbar\">\n     <div className=\"row\">\n         <div className=\"col-xl-11 col-12 m-auto\">\n         <nav class=\"navbar navbar-expand-lg\">\n        <a class=\"navbar-brand\" href=\"/\">\n          <img src=\".\\assests\\logo.png\" alt=\"img\" className=\"img-fluid logo\" />\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"><i class=\"fas fa-align-justify\"></i></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n       {!account  ? <button className=\"btn-yellow\"  onClick={connectMetaMask}>Connect Wallet</button>:  <button className=\"btn-yellow\" onClick={connectMetaMask}>Disconnect</button>}\n         \n        </div>\n      </nav>\n         </div>\n     </div>\n     </section>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport \"./choose.scss\";\nimport { Link } from 'react-router-dom';\n\nconst Choose = () => {\n  return (\n    <>\n    <section className=\"choose\">\n    <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis.</p>\n    <h2>CHOOSE CURRENCY</h2>\n    <div className=\"choose-cards\">\n        <Link to=\"/progress\" className=\"items\" >\n            <h2>BUSD</h2>\n            <img src=\".\\assests\\busd.png\" alt=\"img\" className='img-fluid' />\n        </Link>\n        <Link to=\"/progress\" className=\"items\" >\n            <h2>PAXG</h2>\n            <img src=\".\\assests\\paxg.png\" alt=\"img\" className='img-fluid' />\n        </Link>\n    </div>\n    \n    </section>\n    </>\n  )\n}\n\nexport default Choose","import Web3 from 'web3'\nimport getRpcUrl from './getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from '../utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","let Environment = {\n    YfethContractAddress: \"0x678bF2ABa6282D0e505607Ed3997B7aA590fEC44\",\n    MorocoContractcAddress: \"0x678bF2ABa6282D0e505607Ed3997B7aA590fEC44\",\n    evangelismAddress: \"0x678bF2ABa6282D0e505607Ed3997B7aA590fEC44\",\n  };\n  export default Environment;","import web3NoAccount from './web3'\nimport yfEthAbi from './yfethAbi.json';\nimport MorocoAbi from './MorocoAbi.json'\nimport EvangelismAbi from './evangelism.json'\nimport tokenAbi from './tokenAbi.json'\nconst getContract = (abi, address, web3) => {\n    const _web3 = web3 ?? web3NoAccount;\n    // console.log('_web3',_web3);\n    return new _web3.eth.Contract(abi, address)\n}\n\nexport const getBep20Contract = (address, web3) => {\n    return getContract(yfEthAbi, address, web3)\n}\n\nexport const MorocoContract = (address, web3) => {\n    return getContract(MorocoAbi, address, web3)\n}\n\nexport const Evangelism = (address, web3) => {\n    return getContract(EvangelismAbi, address, web3)\n}\nexport const tokenContract = (address, web3) => {\n    return getContract(tokenAbi, address, web3)\n}","import { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWeb3 from \"./useWeb3\";\nimport environment from \"../utils/Environment\";\nimport { tokenContract } from \"../utils/contractHelpers\";\nimport BigNumber from \"bignumber.js\";\n\nexport const DistributeMultiple = () => {\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const tokenAddress = environment.YfethContractAddress;\n  const contract = tokenContract(tokenAddress, web3);\n  console.log(\"heree i m\", account)\n  const DisperseMulti = useCallback(\n    async (tokenaddy, walletArr, userPrices) => {\n      try {\n         \n\n        for (let elem = 0; elem < userPrices.length; elem++) {\n          userPrices[elem] = web3.utils.toWei(\n            JSON.stringify(userPrices[elem]), \"ether\"\n          )\n         \n        }\n\n        const nfts = await contract.methods\n          .distributeMultiple(tokenaddy,walletArr, userPrices)\n          .send({\n            from: account,\n         \n          })\n          .on(\"transactionHash\", (tx) => {\n            return tx.transactionHash;\n          })\n          .catch((error) => {\n            console.log(\"erorrrr in catcccchhh\", error);\n            return false;\n          });\n        return nfts;\n      } catch (error) {\n        console.log(\"error::::\", error);\n        return false;\n      }\n    },\n    [account,contract]\n  );\n\n  return { DisperseMulti: DisperseMulti };\n};\n\nexport default DistributeMultiple;\n","import React ,{ useEffect, useState }  from \"react\";\nimport \"./progress.scss\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { DistributeMultiple } from '../../hooks/distributeMultiple'\nconst Progress = () => {\n\n  const { account } = useWeb3React();\n\n  const { login, logout } = useAuth();\n\n  //  const [stakefilter, setfilterdata] = useState([]);\n\n  const {DisperseMulti} = DistributeMultiple();\n  // const [tokenAddy,settokenAddy]= useState('0x0Eb3e44ceFFa4214B9E1B4b9EabD97E57EDf80bC');\n  const [amount, setamount]= useState('');\n\n\n  const makepayment = async() => {\n  //  var stakefilter=[\"0xa0774B499241861fc0d91a474D4a3bd9c304404A\",\"0xA0e5a4D5467D64DC09Abc6a6BCe5eEad2d7A64Af\",\"0x1904359446894C41733e963661D0c5C1B2Da7C58\",\"0x1904359446894C41733e963661D0c5C1B2Da7C58\",\"0xe3ea2485afd0E0E75bC1f7B6d373A5cE81f12ebd\"]\n\n   \n    var datas = [\"0xa0774B499241861fc0d91a474D4a3bd9c304404A\",\"0xA0e5a4D5467D64DC09Abc6a6BCe5eEad2d7A64Af\",\"0x1904359446894C41733e963661D0c5C1B2Da7C58\",\"0x1904359446894C41733e963661D0c5C1B2Da7C58\",\"0xe3ea2485afd0E0E75bC1f7B6d373A5cE81f12ebd\"];\n    // console.log(\"here it is\", stakefilter)\n    // for (const elem of stakefilter) {\n    //   datas.push(elem?.account)\n    // }\n    var valarr=[];\n    var newarr= amount/datas.length;\n    for (const elem of datas) {\n      valarr.push(newarr)\n    }\n\n\n    let res= await DisperseMulti(\"0x0Eb3e44ceFFa4214B9E1B4b9EabD97E57EDf80bC\",datas,valarr)\n  }\n  return (\n    <>\n      <section className=\"progress-sec\">\n        <div className=\"container\">\n          <div className=\"bg-img\">\n            <img src=\".\\assests\\bg-img.png\" alt=\"img\" className=\"img-fluid\" />\n          </div>\n          <div className=\"logo\">\n            <img src=\".\\assests\\logo.png\" alt=\"img\" className=\"img-fluid\" />\n          </div>\n          {/* <p>Compiling list of recepients ----- 100%</p>\n          <p>Sending to batch 1 of 10 ---- 100%</p>\n          <p>Sending to batch 2 of 10 ----- 100%</p>\n          <p>Sending to batch 3 of 10 ----- 46%</p> */}\n          <div className=\"row\">\n            <div className=\"col-xl-10 col-12 p-0\">\n              <div className=\"table-responsive\">\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Wallet Address</th>\n                      <th scope=\"col\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">1</th>\n                      <td>0xa0774B499241861fc0d91a474D4a3bd9c304404A</td>\n                      <td>2000</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">2</th>\n                      <td>0xA0e5a4D5467D64DC09Abc6a6BCe5eEad2d7A64Af</td>\n                      <td>2000</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">3</th>\n                      <td>0x1904359446894C41733e963661D0c5C1B2Da7C58</td>\n                      <td>2000</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">4</th>\n                      <td>0x1904359446894C41733e963661D0c5C1B2Da7C58</td>\n                      <td>2000</td>\n                    </tr>\n\n                    <tr>\n                      <th scope=\"row\">5</th>\n                      <td>0xe3ea2485afd0E0E75bC1f7B6d373A5cE81f12ebd</td>\n                      <td>2000</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n          {/* <button\n            type=\"button\"\n            class=\"btn-yellow\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n          >\n            Transaction Complete Modal\n          </button> */}\n          <button\n            type=\"button\"\n            class=\"btn-yellow d-block bhbd\" data-toggle=\"modal\" data-target=\"#exampleModalmerchfdd\"\n          >\n            Pay\n          </button>\n\n          <div class=\"modal fade\" id=\"exampleModalmerchfdd\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-dialog-centered modal-dialog-wallet\">\n                    <div class=\"modal-content\">\n                       <h3 className=\"p-4 text-center\" style={{color:'white'}}>Set Amount to Make Payment</h3>\n                        <div class=\"modal-body p-4 text-center\">\n                            <button className='w-100 ' type='button' >\n                                <div className=\"row pb-2 pt-1\">\n                                 {/* <label>Enter Token address for Reward</label> */}\n                                 {/* <input type=\"text\" className=\"form-control\" style={{color:'#000'}}    onChange={(e) => settokenAddy(e.target.value)}  ></input> */}\n                                 <label >Enter Amount to distribute all Address</label>\n                                 <input type=\"text\" className=\"form-control\" style={{color:'#000'}}  onChange={(e) => setamount(e.target.value)}></input>\n                                </div>\n\n\n                            </button>\n                            \n                          \n                        </div>\n                        <button className=\"btn btn-success text-center\" onClick={makepayment}>Pay</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </section>\n\n      <div\n        class=\"modal fade\"\n        id=\"exampleModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <h6>Transection Complete</h6>\n              <p>\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa\n                qui officia deserunt mollit anim id est laborum.\n              </p>\n              <button className=\"btn-yellow\">OKAY</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Progress;\n","import { useEffect } from 'react'\nimport useAuth from './useAuth'\n\nconst ConnectorNames =  {\n    Injected : \"injected\",\n    WalletConnect : \"walletconnect\",\n    BSC : \"bsc\"\n}\n\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(\"connectorId\")\n\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from \"react\";\nimport \"./app.scss\";\nimport { BrowserRouter as Router,Switch, Route } from \"react-router-dom\";\nimport Landing from \"./components/Landing/Landing\";\nimport Navbar from \"./components/Landing/header/Navbar\";\nimport Choose from \"./components/ChooseCurrency/Choose\";\nimport Progress from \"./components/Progress/Progress\";\nimport useEagerConnect from './hooks/useEagerConnect'\nfunction App() {\n  useEagerConnect()\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n        <Route exact path=\"/\"><Landing /></Route>\n        <Route exact path=\"/choose\"><Choose /></Route>\n        <Route exact path=\"/progress\"><Progress /></Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {};\n\nexport const UserReducer = (state = initState, action) => {\n  const { type, payload } = action; //object destructring\n  switch (type) {\n    case \"BALANCE\":\n      return {\n        ...state,\n        balance: payload,\n      };\n    case \"USER_REWARD\":\n      \n      return {\n        ...state,\n        reward: payload,\n      };\n\n    default:\n      return state;\n  }\n};","import { combineReducers } from \"redux\";\nimport { UserReducer } from \"../Reducers/Index\";\n\nconst rootReducer = combineReducers({\n  UserReducer,\n});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\n// compose are enhancers used for composing middlewares for redux\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n};\n\nconst store = configureStore();\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/index';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { getLibrary } from './utils/web3React'\n// const root = ReactDOM.createRoot(document.getElementById('root'));\nReactDOM.render(\n  <Provider store={store}>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}